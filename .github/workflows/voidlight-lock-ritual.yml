# 🏴‍☠️ Velvet Chains: Voidlight Lock Renewal Ritual
name: "🧬 Voidlight Lock Renewal — Concord Rite"

on:
  push:
    branches: [main]
    paths:
      - pyproject.toml
      - uv.lock
      - .github/workflows/voidlight-lock-ritual.yml
  pull_request:
    branches: [main]
    paths:
      - pyproject.toml
      - uv.lock
      - .github/workflows/voidlight-lock-ritual.yml
  schedule:
    - cron: "0 7 * * 1" # Mondays at 07:00 UTC (weekly concord rite)
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  upgrade-uv-lock:
    name: "🔮 Reweave Dependency Sigils"
    runs-on: ubuntu-latest
    env:
      GH_PR_TOKEN: ${{ secrets.GH_PR_TOKEN }}
      UV_LOCK_MILESTONE: ${{ vars.UV_LOCK_MILESTONE }}
    steps:
      - name: ⚓ Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.ref }}

      - name: ✨ Setup uv
        uses: astral-sh/setup-uv@v7

      - name: 🧵 Refresh lockfile
        run: uv lock --upgrade

      - name: 🩸 Detect lockfile alterations
        id: changes
        run: |
          if git diff --quiet -- uv.lock; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            echo "### 💤 No Renewal Needed" >> "$GITHUB_STEP_SUMMARY"
            echo "uv.lock is unchanged after \`uv lock --upgrade\`. No PR will be opened." >> "$GITHUB_STEP_SUMMARY"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
            echo "### 🔮 Lockfile Renewed" >> "$GITHUB_STEP_SUMMARY"
            echo "uv.lock has been updated and will be proposed via PR." >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: 🧮 Compute checksum of lockfile (only when renewed)
        if: ${{ steps.changes.outputs.changed == 'true' }}
        run: sha256sum uv.lock > uv.lock.sha256

      - name: 📝 Compose PR body with lock diff (first 20 lines)
        run: |
          {
            echo "This automated ritual refreshes \`uv.lock\` based on \`pyproject.toml\`."
            echo
            echo "- Command: \`uv lock --upgrade\`"
            echo "- Includes: \`uv.lock\` and \`uv.lock.sha256\`"
            echo "- Safety: CI verifies lock freshness via \`uv lock --check\`"
            echo
            echo "#### Diff Preview (first 20 lines)"
            echo "```diff"
            git diff --unified=3 -- uv.lock | sed -n '1,20p' || true
            echo "```"
          } > PR_BODY.md

      - name: 🤝 Open PR with renewed lock
        if: ${{ env.GH_PR_TOKEN != '' && steps.changes.outputs.changed == 'true' }}
        uses: peter-evans/create-pull-request@v7
        id: cpr
        with:
          token: ${{ env.GH_PR_TOKEN }}
          commit-message: "🧬 renew: update uv.lock to latest constraints"
          title: "🧬 Renew uv.lock — dependency refresh"
          body-path: PR_BODY.md

          branch: chore/renew-uv-lock
          add-paths: |
            uv.lock
            uv.lock.sha256
          signoff: true
          committer: "Obsidian Promise Bot <github-actions[bot]@users.noreply.github.com>"
          author: "Obsidian Promise Bot <github-actions[bot]@users.noreply.github.com>"
          labels: |
            dependencies
            uv-lock
          assignees: |
            hsmalley
          reviewers: |
            hsmalley
          # Optional milestone; if empty, action ignores.
          milestone: ${{ env.UV_LOCK_MILESTONE }}
          delete-branch: true

      - name: 📜 Chronicle renewal PR
        if:
          ${{ steps.changes.outputs.changed == 'true' && steps.cpr.outputs.pull-request-url != '' }}
        run: |
          {
            echo "### 📜 Lock Renewal PR Opened";
            echo "- PR: ${{ steps.cpr.outputs.pull-request-url }}";
            echo "- Number: ${{ steps.cpr.outputs.pull-request-number }}";
          } >> "$GITHUB_STEP_SUMMARY"

      - name: 💤 No changes — ritual concluded
        if: ${{ steps.changes.outputs.changed != 'true' }}
        run: |
          echo "No diff detected in uv.lock. Skipping PR creation." >> "$GITHUB_STEP_SUMMARY"

      - name: 📝 PR permission missing — leave a captain’s note
        if: ${{ env.GH_PR_TOKEN == '' }}
        run: |
          echo "### 🔒 Cannot open PR from Actions" >> $GITHUB_STEP_SUMMARY
          echo "This repository disallows Actions-created PRs or lacks a PAT." >> $GITHUB_STEP_SUMMARY
          echo "Add a classic Personal Access Token (repo scope) named \`GH_PR_TOKEN\` to repository secrets, or enable the repository setting: \"Allow GitHub Actions to create and approve pull requests\"." >> $GITHUB_STEP_SUMMARY
